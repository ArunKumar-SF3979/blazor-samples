@page "/rich-text-editor/inline"
@using Syncfusion.Blazor.RichTextEditor
@inherits SampleBaseComponent;

<SampleDescription>
    <p>This sample demonstrates the inline editing mode of Rich Text Editor where the toolbar will appear when you select the content. 
        Also, Toolbar hides when you focus out from the edit area.</p>
</SampleDescription>
<ActionDescription>
   <p>The <a href="https://www.syncfusion.com/blazor-components/blazor-wysiwyg-rich-text-editor">Blazor Rich Text Editor</a> provides an option to display toolbar on demand by setting <code>Enable</code> property of <a href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.RichTextEditor.RichTextEditorInlineMode.html">RichTextEditorInlineMode</a>.
   The commands displayed in inline toolbar can be customized by setting <code>Items</code> property of <a href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.RichTextEditor.RichTextEditorToolbarSettings.html">RichTextEditorToolbarSettings</a>.
   </p>
</ActionDescription>

<div class="control-section" id="pageHeight">
    <SfRichTextEditor>
        <p>The sample is configured with the inline mode of the editor. Initially, the editor is rendered without a <a href="https://blazor.syncfusion.com/home/" target='_blank'>toolbar</a>. The toolbar becomes visible only when the content is selected.</p>
        <RichTextEditorToolbarSettings Items="@ToolsForInline" />
        <RichTextEditorInlineMode Enable="true" ShowOnSelection="true" /> 
    </SfRichTextEditor>
</div>

@code {
    private List<ToolbarItemModel> ToolsForInline = new List<ToolbarItemModel>()
    {
        new ToolbarItemModel() { Command = ToolbarCommand.Bold },
        new ToolbarItemModel() { Command = ToolbarCommand.Italic },
        new ToolbarItemModel() { Command = ToolbarCommand.Underline },
        new ToolbarItemModel() { Command = ToolbarCommand.Formats },
        new ToolbarItemModel() { Command = ToolbarCommand.HorizontalSeparator },
        new ToolbarItemModel() { Command = ToolbarCommand.Alignments },
        new ToolbarItemModel() { Command = ToolbarCommand.OrderedList },
        new ToolbarItemModel() { Command = ToolbarCommand.UnorderedList },
        new ToolbarItemModel() { Command = ToolbarCommand.CreateLink }
    };
}