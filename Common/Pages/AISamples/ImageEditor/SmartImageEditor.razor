@page "/ai-imageeditor/smart-imageeditor"
@using Syncfusion.Blazor.ImageEditor
@using Syncfusion.Blazor.Spinner
@using Syncfusion.Blazor.Navigations
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Inputs
@inject IJSRuntime JS

@*Hidden:Lines*@
@inherits SampleBaseComponent
@inject NavigationManager NavigationManager
@*End:Hidden*@

<SampleDescription>
    <p>
        This demo highlights the advanced features of the Syncfusion Blazor Image Editor, including:
    </p>
    <ul>
        <li><strong>Magic Eraser:</strong> Users can easily remove unwanted elements from an image with precision, seamlessly blending the background for a polished finish. It's ideal for effortlessly refining images by erasing distractions.</li>
        <li><strong>Background Changer:</strong> Users can easily replace or modify the background, offering the flexibility to customize the scene while keeping the main subject intact. This feature enhances creativity in image editing.</li>
        <li><strong>Background Remover:</strong> Provides the ability to remove the background from an image, isolating the main subject. It's perfect for creating transparent backgrounds or inserting the subject into a new environment.</li>
    </ul>
    <p>
        These features make the Image Editor more intuitive and sophisticated, enhancing the overall image editing experience.
    </p>
    <p>To explore this and more Syncfusion Blazor Smart AI integrations locally, check out our <a target='_blank' href='https://github.com/syncfusion/smart-ai-samples/tree/master/blazor' aria-label="Navigate to explore the syncfusion Blazor AI Demos repository">GitHub repository</a>.</p>
</SampleDescription>

<ActionDescription>
    <p><strong>Magic Eraser:</strong> The Magic Eraser allows users to select and remove unwanted elements from an image with high precision. Once an area is erased, the tool automatically blends the surrounding background to create a smooth, natural look, making it ideal for cleaning up images and eliminating distractions.</p>
    <p><strong>Background Changer:</strong> The Background Changer enables users to replace or modify the existing background of an image. This feature allows for the customization of the scene while preserving the integrity of the main subject, offering a creative way to alter the context or setting of an image.</p>
    <p><strong>Background Remover:</strong> The Background Remover allows users to remove the background from an image, effectively isolating the main subject. This feature is particularly useful for creating transparent backgrounds or placing the subject onto a different backdrop, enhancing the versatility of the image.</p>
</ActionDescription>

@*Hidden:Lines*@
@{#if (SHOW_GIF_IMAGES)}
<img src="@NavigationManager.ToAbsoluteUri($" {SampleService.WebAssetsPath}images/smartcomponents/imageeditor/smart-imageeditor.gif")" style="width:100%; height:100%;" />
@{#else}
@*End:Hidden*@
<div id="control-section">
    <div class="@MagicEraserOpt">
        <div class="upper-div">
            <label>Magic Eraser</label>
            <SfButton id="remove-btn" IconCss="e-icons e-close" CssClass="e-small e-round" IsPrimary=true OnClick="RemoveBtnClick"></SfButton>
        </div>
        <div class="lower-div">
			<img src="images/image-editor/object-remover.gif" style="width:180px;height:180px;"/>
            <br><span>Select the object to be removed</span>
        </div>
        <SfButton class="remove-button" id="eraseBtn" CssClass="e-primary" OnClick="EraseBtnClick" Content="Remove"></SfButton>
    </div>
    <div class="@BgChangerOpt">
        <div class="upper-div">
            <label>Change Background</label>
            <SfButton id="bg-change-remove-btn" CssClass="e-small e-round" IconCss="e-icons e-close" IsPrimary=true OnClick="BgRemoveBtnClick"></SfButton>
        </div>
        <div class="lower-div">
            <div class="control-section">
                <div id="default-control">
                    <span>New Color</span><br/>
                    <SfColorPicker Value="@CirclePaletteValue" ValueChange="CirclePaletteChange"></SfColorPicker>
                </div>
            </div>
            <br/>
            <span>Preset Colors</span>
            <div class="col-xs-12 col-sm-12 col-lg-6 col-md-6">
                <SfColorPicker Value="@CirclePaletteValue" Mode="ColorPickerMode.Palette" CssClass="circle-palette" ModeSwitcher="false" Inline="true" ShowButtons="false" Columns="6" PresetColors="@CirclePaletteColors" ValueChange="CirclePaletteChange"></SfColorPicker>
            </div>
            <span>Custom Background</span><br>
            <SfTextBox Placeholder="Example: Waterfalls, Mountains, etc.." CssClass="e-outline" @bind-Value="@BgTextValue"></SfTextBox>
        </div>
        <SfButton class="bg-change-button" id="bgChangeBtn" Content="Apply" CssClass="e-primary" OnClick="ApplyBtnClick"></SfButton>
    </div>
	<div id="sidebar-wrapper">
		<div>
			<SfSidebar class= "default-sidebar" Width="220px" Target="@Target" Position="@Position" @bind-IsOpen="SidebarToggle" Changed="Changed" Type="SidebarType.Push">
				<ChildContent>
					<SfTreeView TValue="TreeData" @ref="TreeViewObj">
						<TreeViewEvents TValue="TreeData" NodeClicked="OnSelect"></TreeViewEvents>
						<TreeViewFieldsSettings Id="Id" Text="Name" Selected="Selected" ParentID="Pid" HasChildren="HasChild" Expanded="Expanded" ImageUrl="ImageUrl" DataSource="@LocalData"></TreeViewFieldsSettings>
					</SfTreeView>
				</ChildContent>
			</SfSidebar>
			<SfToolbar CssClass="defaultToolbar" >
				<ToolbarItems>
					<ToolbarItem>
						<Template>
							<SfButton IconCss="e-icons e-menu" @onclick="OnMenuClick"></SfButton>
						</Template>
					</ToolbarItem>
					<ToolbarItem>
						<Template>
							<div class="e-folder">
								<div class="e-folder-name">AI Image Editor</div>
							</div>
						</Template>
					</ToolbarItem>
				</ToolbarItems>
			</SfToolbar>
		</div>
		<div class="maincontent">
			<div id="controlWrapper" class="@WrapperClass">
				<SfImageEditor @ref="ImageEditor" HtmlAttributes="@maskAttribute">
					<ImageEditorEvents Created="Created" FileOpened="FileOpened"></ImageEditorEvents>
				</SfImageEditor>
			</div>
		</div>
		<SfSpinner @bind-Visible="@VisibleProperty"></SfSpinner>
	</div>
</div>
@*Hidden:Lines*@
@{#endif}
@*End:Hidden*@
@code {
    public string SearchPromptValue = "Background of the image";
    public string ApiKey = "your api key";
    public string MagicEraserOpt = "magic-eraser e-hide";
    public string BgChangerOpt = "bg-changer e-hide";
    public string CirclePaletteValue = "#ffffff";
    public string BgTextValue = "";
    public string Target = ".maincontent";
    public SidebarPosition Position { get; set; } = SidebarPosition.Left;
    public bool SidebarToggle;
    public bool VisibleProperty { get; set; } = false;
    public string WrapperClass = "e-style-none";
    public Dictionary<string, object> maskAttribute;
    SfImageEditor ImageEditor;
    SfTreeView<TreeData> TreeViewObj;

    public void OnMenuClick()
    {
        SidebarToggle = !SidebarToggle;
    }

    public async void Changed()
    {
        await ImageEditor.RefreshAsync();
    }

    public async void OnSelect(NodeClickEventArgs args)
    {
        if (args.NodeData.Text == "Magic Eraser")
        {
            BgChangerOpt = "bg-changer e-hide";
            MagicEraserOpt = "magic-eraser e-show";
            maskAttribute = (new Dictionary<string, object> { { "data-value", "mask-drawing" } });
            await ImageEditor.EnableFreehandDrawAsync();
            TreeViewObj.SelectedNodes = new string[] { };
            await TreeViewObj.ClearStateAsync();

        }
        else if (args.NodeData.Text == "Change Background")
        {
            MagicEraserOpt = "magic-eraser e-hide";
            BgChangerOpt = "bg-changer e-show";
            TreeViewObj.SelectedNodes = new string[] { };
            await TreeViewObj.ClearStateAsync();
            VisibleProperty = true;
            WrapperClass = "e-style-opacity";
            string base64 = await ImageEditor.GetImageDataUrlAsync(false);
            RemoveBg(base64);
        }
        else if (args.NodeData.Text == "Remove Background")
        {
            VisibleProperty = true;
            WrapperClass = "e-style-opacity";
            string base64 = await ImageEditor.GetImageDataUrlAsync(false);
            RemoveBg(base64);
        }
        StateHasChanged();
    }

    private List<TreeData> LocalData = new List<TreeData>();
    protected override void OnInitialized()
    {
        base.OnInitialized();
        LocalData.Add(new TreeData
        {
            Id = "1",
            Name = "Magic Eraser",
            ImageUrl = "images/image-editor/object-remover.png"
        });
        LocalData.Add(new TreeData
        {
            Id = "2",
            Name = "Change Background",
            ImageUrl = "images/image-editor/change-bg.png"
        });
        LocalData.Add(new TreeData
        {
            Id = "3",
            Name = "Remove Background",
            ImageUrl = "images/image-editor/remove-bg.png"
        });

    }

    class TreeData
    {
        public string Id { get; set; }
        public string Pid { get; set; }
        public string Name { get; set; }
        public bool HasChild { get; set; }
        public bool Expanded { get; set; }
        public bool Selected { get; set; }
        public string ImageUrl { get; set; }
    }

    private async void CirclePaletteChange(ColorPickerEventArgs args)
    {
        CirclePaletteValue = args.CurrentValue.Hex;
        await ImageEditor.OpenAsync("", false, CirclePaletteValue);
    }

    public Dictionary<string, string[]> CirclePaletteColors = new Dictionary<string, string[]>() {
        { "Custom", new string[] {"#f44336", "#e91e63", "#9c27b0", "#673ab7", "#2196f3", "#03a9f4", "#00bcd4",
                "#009688", "#8bc34a", "#cddc39", "#ffeb3b", "#ffc107" } }
    };

    public async void Created()
    {
        await ImageEditor.OpenAsync(NavigationManager.ToAbsoluteUri($"{SampleService.WebAssetsPath}images/image-editor/image.png"));
    }

    public async void FileOpened()
    {
        await ImageEditor.RefreshAsync();
    }

    public async void RemoveBtnClick()
    {
        maskAttribute = (new Dictionary<string, object> { { "data-value", "" } });
        MagicEraserOpt = "magic-eraser e-hide";
        WrapperClass = "e-style-none";
        VisibleProperty = false;
        await TreeViewObj.ClearStateAsync();
        await ImageEditor.DiscardAsync();
        StateHasChanged();
    }

    public async void BgRemoveBtnClick()
    {
        BgChangerOpt = "bg-changer e-hide";
        CirclePaletteValue = "#ffffff";
        BgTextValue = "";
        WrapperClass = "e-style-none";
        VisibleProperty = false;
        await TreeViewObj.ClearStateAsync();
        StateHasChanged();
    }

    public async void EraseBtnClick()
    {
        VisibleProperty = true;
        WrapperClass = "e-style-opacity";
        string maskUrl = await ImageEditor.GetImageDataUrlAsync(false);
        maskAttribute = (new Dictionary<string, object> { { "data-value", "" } });
        string base64 = await ImageEditor.GetImageDataUrlAsync(false);
        var base64Image = await JS.InvokeAsync<string>(
            "getStabilityAiModel",
            base64,
            null,
            null,
            maskUrl,
            ApiKey
        );

        await ImageEditor.OpenAsync(base64Image, false);
        WrapperClass = "e-style-none";
        VisibleProperty = false;
        MagicEraserOpt = "magic-eraser e-hide";
        await TreeViewObj.ClearStateAsync();
        StateHasChanged();
    }

    public async void ApplyBtnClick()
    {
        VisibleProperty = true;
        WrapperClass = "e-style-opacity";
        if (BgTextValue != "")
        {
            string base64 = await ImageEditor.GetImageDataUrlAsync(false);
            var base64Image = await JS.InvokeAsync<string>(
                   "getStabilityAiModel",
                   base64,
                   BgTextValue,
                   SearchPromptValue,
                   null,
                   ApiKey
               );

            await ImageEditor.OpenAsync(base64Image, false);
            BgRemoveBtnClick();
        }
        else
        {
            BgRemoveBtnClick();
        }
    }

    private async void RemoveBg(string base64)
    {
        var base64Image = await JS.InvokeAsync<string>(
                "getStabilityAiModel",
                base64,
                null,
                null,
                null,
                ApiKey
            );
        await ImageEditor.OpenAsync(base64Image, false);
        WrapperClass = "e-style-none";
        VisibleProperty = false;

    }
}
<style>
    #control-section {
        width: auto;
        height: 555px;
    }
    
    #remove-btn, #bg-change-remove-btn {
        background: #fff;
        color: #000;
    }

    .magic-eraser, .bg-changer {
        width: 280px;
        border-radius: 10px;
        position: absolute;
        left: 290px;
        top: 245px;
        z-index: 1000;
        background: #fff;
        display: none;
        border: 1px solid #ccc;
    }

    .upper-div {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 10px;
        border-bottom: 1px solid #ccc;
        font-size: 16px;
        font-family: "Roboto", -apple-system, BlinkMacSystemFont, "Segoe UI", "Helvetica Neue", sans-serif;
    }

    hr {
        border: 0;
        height: 1px;
        background: #ccc;
    }

    .lower-div {
        padding: 20px;
        background-color: #fff;
        border-bottom: 1px solid #ccc;
        font-size: 14px;
        font-family: "Roboto", -apple-system, BlinkMacSystemFont, "Segoe UI", "Helvetica Neue", sans-serif;
    }

    .remove-button, .bg-change-button {
        display: block;
        margin: 10px auto;
        padding: 10px 20px;
        color: white;
        border: none;
        cursor: pointer;
        width: 200px !important;
    }

    #controlWrapper {
        width: 50vw;
        height: 600px;
    }

    #sidebar-wrapper.control-section {
        padding: 0;
    }

    #sidebar-wrapper .default-sidebar {
        z-index: 20 !important;
    }

    #sidebar-wrapper .e-content-animation {
        width: auto;
    }

    @@font-face {
        font-family: 'Material_toolbar';
        src: url(data:application/x-font-ttf;charset=utf-8;base64,) format('truetype');
        font-weight: normal;
        font-style: normal;
    }

    .e-tbar-btn .tb-icons {
        font-family: 'Material_toolbar';
        speak: none;
        font-size: 16px;
        font-style: normal;
        font-weight: normal;
        font-variant: normal;
        text-transform: none;
    }

    .e-toolbar .e-icons {
        font-size: 20px;
    }

    .e-tbar-menu-icon:before {
        content: "\e718";
    }

    .e-treeview .e-list-icon, .e-treeview .e-list-img {
        width: 150px !important;
        height: 130px !important;
    }

    .e-treeview .e-fullrow {
        height: 162px !important;
    }

    .e-text-content {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        padding: 0 !important;
    }

    /* Color Picker Code Starts */
    /* Circle palette customization */
    .circle-palette .e-container .e-palette .e-tile {
        border: 0;
        height: 32px;
        width: 32px;
        border-radius: 20px;
        margin: 4px;
    }
    .mobile .circle-palette .e-container .e-palette .e-tile {
        height: 32px;
        width: 32px;
    }
    .circle-palette .e-container .e-palette .e-tile:hover {
        box-shadow: none;
        transform: scale(1.2);
        transition: transform .2s ease-out;
    }
    .circle-palette .e-container .e-palette .e-tile::before {
        content: '';
        height: 32px;
        width: 32px;
        border-radius: 20px;
        display: inline-block;
        transform: scale(0);
        transition: transform 1.2s ease-in;
    }
    .circle-palette .e-container .e-palette .e-tile.e-selected::before {
        transform: scale(0.8);
        background-color: #fff;
        transition: transform .2s ease-out;
    }
    .circle-palette .e-container,
    .scroll-palette .e-container {
        background-color: transparent;
        border-color: transparent;
        box-shadow: none;
    }
    /* Color Picker Code Ends*/

    .e-input-group {
        margin-top: 10px !important;
    }

    .bg-changer .lower-div span {
        font-weight: 500;
    }

    .e-list-item {
        padding: 10px;
        border: 2px solid transparent;
    }

    .e-list-item:hover {
        border: 2px solid lightgray;
    }

    .e-fullrow {
        left: 20px !important;
        width: 160px !important;
    }

    .e-treeview .e-list-icon, .e-treeview .e-list-img {
        margin: 0 !important;
    }

    .e-treeview .e-ul {
        margin-right: 10px;
        margin-top: 10px;
    }

    #colorpicker-control .e-colorpicker-wrapper {
        margin-top: 10px;
    }
    .e-palette {
        padding-left: 0px !important;
    }

    .defaultToolbar.e-toolbar .e-folder {
        font-weight: 500;
        font-size: 16px;
    }

    .magic-eraser .lower-div {
        text-align: center;
    }

    .e-style-opacity {
        opacity: 0.5;
    }

    .e-style-none {
        opacity: 1;
    }

    .e-hide {
        display: none !important;
    }

    .e-show {
        display: block !important;
    }

    #sidebar-wrapper .defaultToolbar .e-btn.e-icon-btn {
        border: 0;
        background-color: #f3f2f1;
    }

    .e-treeview .e-list-item.e-active>.e-fullrow {
        background-color: transparent !important;
        border-color: transparent !important;
        font-weight: 400;
    }
    .e-treeview .e-list-item.e-hover>.e-fullrow {
        background-color: transparent !important;
        border-color: transparent !important;
    }
    .e-treeview .e-list-item.e-active.e-hover>.e-fullrow {
        background-color: transparent !important;
        border-color: transparent !important;
    }
 </style>