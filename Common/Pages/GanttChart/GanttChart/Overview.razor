@page "/gantt-chart/overview"

@using BlazorDemos.Shared
@using Syncfusion.Blazor
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Gantt
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Navigations
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Popups
@using Syncfusion.Blazor.Data
@using Syncfusion.Blazor.Lists
@inject NavigationManager Navigation
@inject IJSRuntime JSRunTime
@inject Microsoft.AspNetCore.Components.NavigationManager UriHelper
@using ej2_blazor_ganttdata;
@using global::Overview.Pages;

@inherits SampleBaseComponent;

<SampleDescription>
    <p>This sample shows an overview of the <a aria-label="Navigate to the explore Syncfusion Blazor gantt chart component" target='_blank' href='https://www.syncfusion.com/blazor-components/blazor-gantt-chart'>Blazor Gantt Chart</a> features that visualize the progress of each feature of the product towards its release and make it easier to monitor the scheduling of the dependent items.</p>
</SampleDescription>
<ActionDescription>
    <p>This example showcases the e-commerce platform redesign project visualized in the Blazor Gantt Chart. It provides a clear roadmap for the redesign process, tracking key milestones, task progress, resource allocation, and deadlines. With this interactive timeline, teams can efficiently manage the entire revamp from initial planning to final deployment ensuring a seamless and successful transformation of the e-commerce platform.</p>
    <p>Blazor Gantt Chart features such as <a aria-label="Navigate to the documentation for sorting in gantt chart component" target='_blank' href='https://blazor.syncfusion.com/documentation/gantt-chart/sorting'>Sorting</a>, <a aria-label="Navigate to the documentation for filtering in gantt chart component" target='_blank' href='https://blazor.syncfusion.com/documentation/gantt-chart/filtering'>Filtering</a>, <a aria-label="Navigate to the documentation for column resizing in gantt chart component" target='_blank' href='https://blazor.syncfusion.com/documentation/gantt-chart/column-resizing'>Column resizing</a>, <a aria-label="Navigate to the documentation for column menu in gantt chart component" target='_blank' href='https://blazor.syncfusion.com/documentation/gantt-chart/column-menu'>Column menu</a>, and so on are used in this demo.</p>
</ActionDescription>

<div class="col-lg-12 control-section e-gantt-overview-sample">
    <div class="content-wrapper e-gantt-overview-sample-wrapper">
        <div class="row e-gantt-overview-sample-row">
                <SfGantt @ref="GanttInstance" ID="GanttOverview" DataSource="TaskCollection" Height="100%" Width="100%" ScrollToTaskbarOnClick="true" TreeColumnIndex="1" RowHeight="@RowHeightValue"
                         TValue="OverviewData.TaskData" Toolbar="Toolbaritems" AllowExcelExport="true" AllowPdfExport="true" GridLines="@gridlines" EnableCriticalPath="@IsCriticalPathEnabled"
                         WorkWeek="@WorkWeekDays" WorkUnit="WorkUnit.Hour" HighlightWeekends="true" DurationUnit="@DurationValue" EnableRowHover="true" ProjectStartDate="@ProjectStartDate" ProjectEndDate="@ProjectEndDate" AutoCalculateDateScheduling="true" EnablePredecessorValidation="true"
                         ViewType="@SelectedViewType" AllowSorting="true" AllowFiltering="true" EnableContextMenu="true" AllowResizing="true">

                    @if (!ShowDependency)
                    {
                        <GanttTaskFields Id="Id" Name="Task" StartDate="StartDate" EndDate="EndDate" Progress="Progress" ParentID="ParentId" Notes="Notes">
                        </GanttTaskFields>
                    }
                    else if (IsCustomSchedulingEnabled)
                    {
                        <GanttTaskFields Id="Id" Name="Task" StartDate="StartDate" EndDate="EndDate" Progress="Progress" ParentID="ParentId" Dependency="Dependencies" Manual="IsManual" Notes="Notes">
                        </GanttTaskFields>
                    }
                    else
                    {
                        <GanttTaskFields Id="Id" Name="Task" StartDate="StartDate" EndDate="EndDate" Dependency="Dependencies" Progress="Progress" ParentID="ParentId" Notes="Notes">
                        </GanttTaskFields>
                    }
                    <GanttColumns>
                        <GanttColumn Field="Id" HeaderText="Task TaskId" Visible="false" />
                        <GanttColumn Field="Task" HeaderText="Task Name" Width="280" ClipMode="ClipMode.EllipsisWithTooltip"/>

                        <GanttColumn Field="Assignee" HeaderText="Assigned Person" ClipMode="ClipMode.EllipsisWithTooltip">
                            <Template>
                                @{
                                    var task = (OverviewData.TaskData)context;
                                }
                                <div class="assignee-column" style="display: flex; flex-direction: column; justify-content: center; height: 100%;">
                                    <strong>@task.Assignee</strong>
                                    <span style="font-size: smaller; color: gray;">@task.Department</span>
                                </div>
                            </Template>
                        </GanttColumn>
                        <GanttColumn Field="StartDate" HeaderText="Start Date" Width="100" ClipMode="ClipMode.EllipsisWithTooltip"/>
                        <GanttColumn Field="EndDate" HeaderText="End Date" Width="100" ClipMode="ClipMode.EllipsisWithTooltip"/>
                        <GanttColumn Field="Priority" HeaderText="Task Priority" ClipMode="ClipMode.EllipsisWithTooltip">
                            <Template>
                                @{
                                    var employee = (context as OverviewData.TaskData);
                                    if (employee.Priority == "Medium")
                                    {
                                        <div class="statustemp e-activecolor">
                                            <span class="statustxt e-activecolor">@employee.Priority</span>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="statustemp e-inactivecolor">
                                            <span class="statustxt e-inactivecolor">@employee.Priority</span>
                                        </div>
                                    }
                                }
                            </Template>
                        </GanttColumn>
                        <GanttColumn Field="Budget" HeaderText="Allocated Budget ($)" TextAlign="TextAlign.Right" Format="C2" ClipMode="ClipMode.EllipsisWithTooltip" Type="ColumnType.Double" />
                        <GanttColumn Field="ActualCost" HeaderText="Spent Budget  ($)" TextAlign="TextAlign.Right" Format="C2" ClipMode="ClipMode.EllipsisWithTooltip" Type="ColumnType.Double" />
                        <GanttColumn Field="Progress" HeaderText="Completion (%)" TextAlign="TextAlign.Right" ClipMode="ClipMode.EllipsisWithTooltip"/>
                        <GanttColumn Field="Status" HeaderText="Status" Width="120" />
                        <GanttColumn Field="Dependencies" HeaderText="Related Tasks" Width="100" ClipMode="ClipMode.EllipsisWithTooltip" />
                        <GanttColumn Field="Risks" HeaderText="Risk Level" ClipMode="ClipMode.EllipsisWithTooltip">
                            <Template>
                                @{
                                    var employee = (context as OverviewData.TaskData);
                                    if (employee.Risks == "Low")
                                    {
                                        <div class="statustemp e-lowcolor">
                                            <span class="statustxt e-lowcolor">@employee.Risks</span>
                                        </div>
                                    }
                                    else if (employee.Risks == "Medium")
                                    {
                                        <div class="statustemp e-activecolor">
                                            <span class="statustxt e-activecolor">@employee.Risks</span>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="statustemp e-inactivecolor">
                                            <span class="statustxt e-inactivecolor">@employee.Priority</span>
                                        </div>
                                    }
                                }
                            </Template>
                        </GanttColumn>
                        <GanttColumn Field="Category" HeaderText="Task Category" ClipMode="ClipMode.EllipsisWithTooltip" />
                        <GanttColumn Field="Location" HeaderText="Work Location" ClipMode="ClipMode.EllipsisWithTooltip"/>
                        <GanttColumn Field="TechStack" HeaderText="Technology Stack" ClipMode="ClipMode.EllipsisWithTooltip" />
                        <GanttColumn Field="EstimatedStoryPoints" HeaderText="Story Points" ClipMode="ClipMode.EllipsisWithTooltip" Width="120px" TextAlign=TextAlign.Right Type="ColumnType.Integer" />
                        <GanttColumn Field="Initiative" HeaderText="Initiative" ClipMode="ClipMode.EllipsisWithTooltip"/>
                        <GanttColumn Field="PriorityLevel" HeaderText="Strategic Priority" ClipMode="ClipMode.EllipsisWithTooltip" />
                    </GanttColumns>
                    <GanttTimelineSettings>
                        <GanttTopTierSettings Unit="TimelineViewMode.Month"></GanttTopTierSettings>
                        <GanttBottomTierSettings Unit="TimelineViewMode.Day" Count="3"></GanttBottomTierSettings>
                    </GanttTimelineSettings>
                    <GanttSplitterSettings ColumnIndex="4"></GanttSplitterSettings>
                    @if (IsTaskLabelsVisible)
                    {
                        <GanttLabelSettings TValue="OverviewData.TaskData">
                            <RightLabelTemplate>
                                @{
                                    var taskData = context as OverviewData.TaskData;
                                    if (taskData.Assignee != null)
                                    {
                                        int randomIndex = 0;
                                        if (taskData.Id % 2 == 0)
                                        {
                                            randomIndex = 0;
                                        }
                                        else if (taskData.Id % 3 == 0)
                                        {
                                            randomIndex = 1;
                                        }
                                        else if (taskData.Id % 2 != 0)
                                        {
                                            randomIndex = 2;
                                        }
                                        else if (taskData.Id % 3 != 0)
                                        {
                                            randomIndex = 3;
                                        }
                                        var randomItem = OverviewData.GetResources[randomIndex];

                                        // Get the random name
                                        string resourceName = randomItem.Name.Trim().Replace(" ", "").ToLower();
                                        <div class="e-right-label-inner-div">
                                            <img class="e-label image" role="presentation"
                                                 src="@Navigation.ToAbsoluteUri($"{SampleService.WebAssetsPath}images/gantt/{resourceName}.png")" alt="@resourceName" />

                                        </div>
                                    }
                                }
                            </RightLabelTemplate>
                            <TaskLabelTemplate>
                                <div class="e-task-label-inner-div progress-label">
                                    <span class="e-task-label">@((context as OverviewData.TaskData).Progress)%</span>
                                </div>
                            </TaskLabelTemplate>
                        </GanttLabelSettings>
                    }else{
                        <GanttLabelSettings TValue="OverviewData.TaskData">
                            <TaskLabelTemplate>
                                <div class="e-task-label-inner-div progress-label">
                                    <span class="e-task-label">@((context as OverviewData.TaskData).Progress)%</span>
                                </div>
                            </TaskLabelTemplate>
                        </GanttLabelSettings>
                    }
                    <GanttEventMarkers>
                        @if (IsEventMarkerVisible)
                        {
                            <GanttEventMarker Day="@VolumeOneReleaseDate" Label="Kickoff Meeting"
                                              CssClass="e-custom-event-marker"></GanttEventMarker>
                            <GanttEventMarker Day="@VolumeTwoReleaseDate" Label="Design Phase Completed"
                                              CssClass="e-custom-event-marker"></GanttEventMarker>
                            <GanttEventMarker Day="@VolumeThreeReleaseDate" Label="Deployment"
                                              CssClass="e-custom-event-marker"></GanttEventMarker>
                        }
                    </GanttEventMarkers>
                    <GanttHolidays>
                            @{
                                foreach (var holiday in OverviewData.HolidayCollection)
                                {
                                    <GanttHoliday From="holiday.Date" To="holiday.Date" Label="@holiday.HolidayName"></GanttHoliday>
                                }
                            }
                        </GanttHolidays>
                    <GanttResource DataSource="ResourceCollection" Id="Id" Name="Name" MaxUnits="MaxUnit" TValue="OverviewData.TaskData" TResources="OverviewData.ResourceInfoModel"></GanttResource>
                    <GanttAssignmentFields DataSource="AssignmentCollection" PrimaryKey="Id" TaskID="TaskId" ResourceID="ResourceId" Units="Unit" TValue="OverviewData.TaskData" TAssignment="OverviewData.AssignmentModel"></GanttAssignmentFields>
                    <GanttSegmentFields DataSource="SegmentCollection" PrimaryKey="id" ForeignKey="TaskId" StartDate="StartDate" EndDate="EndDate" Duration="Duration" TValue="OverviewData.TaskData" TSegments="OverviewData.SegmentModel"></GanttSegmentFields>
                    <GanttTimelineSettings TimelineUnitSize="@DefaultUnitWidth">
                        <GanttTopTierSettings Unit="TimelineViewMode.Month"></GanttTopTierSettings>
                        <GanttBottomTierSettings Unit="TimelineViewMode.Week" Format="dd"></GanttBottomTierSettings>
                    </GanttTimelineSettings>
                    <GanttCriticalPathSettings SlackValue="7" ></GanttCriticalPathSettings>
                    <GanttEvents OnToolbarClick="ToolbarClickHandler" RowSelected="RowSelectedHandler" PdfQueryTaskbarInfo="PdfQueryTaskbarInfoHandler" PdfQueryCellInfo="PdfQueryCellInforHandler" TValue="OverviewData.TaskData"></GanttEvents>
                </SfGantt>
            </div>
            <div style="padding-left: 10px; padding-right: 20px;">
                @if (IsSideBar)
                {
                    <SfSidebar class="default-sidebar" Width="260px" Target="#GanttOverview" EnableGestures="false" Position="SidebarPosition.Right" Type="SidebarType.Over" @bind-IsOpen="IsSidebarToggled">
                        <ChildContent>

                            <SfListView DataSource="@ListViewData" CssClass="groupedList" ShowHeader="true" HeaderTitle="@CurrentHeaderTitle" ShowIcon="true" Width="260px" TValue="DataModel">
                                <ListViewFieldSettings TValue="DataModel" Id="Id" Text="Text" GroupBy="Category" Tooltip="Text"></ListViewFieldSettings>
                                <ListViewEvents TValue="DataModel"></ListViewEvents>
                                <ListViewTemplates TValue="DataModel">
                                    <HeaderTemplate>
                                        <div class="header-title">
                                            <div>
                                                @CurrentHeaderTitle
                                            </div>
                                            <span class="e-close" @onclick="@Close" style="cursor:pointer"></span>
                                        </div>
                                    </HeaderTemplate>
                                    <GroupTemplate>
                                        @{
                                            var composedItemModel = context as Syncfusion.Blazor.Lists.ComposedItemModel<DataModel>;
                                            var data = composedItemModel.Text;
                                            <div>
                                                @if (data != "")
                                                {
                                                    if (data == "Scheduling Settings")
                                                    {
                                                        <div class="list-header">Scheduling settings</div>
                                                    }
                                                    else if (data == "View settings")
                                                    {
                                                        <div class="list-header">View settings</div>
                                                    }
                                                    else if (data == "API properties")
                                                    {
                                                        <div class="list-header">API properties</div>
                                                    }
                                                }
                                            </div>
                                        }
                                    </GroupTemplate>
                                    <Template>
                                        @{
                                            if (context.Text == "RowHeight")
                                            {
                                                <div>
                                                    <label class="labels">Row height:</label>
                                                    <div style="padding-left: 12px;padding-right: 5px;margin-top: 7px;">
                                                        <SfSlider Min="45" Max="65" Step="10" Type=SliderType.MinRange TValue="int" @bind-Value="@RowHeightValue">
                                                            <SliderTicks Placement="Placement.Before"></SliderTicks>
                                                            <SliderEvents TValue="int" ValueChange="@(e => { rowheightchange(e.Value); })"></SliderEvents>
                                                        </SfSlider>

                                                    </div>
                                                </div>
                                            }

                                            if (context.Text == "Work Week")
                                            {
                                                <label class="labels">Work week:</label>
                                                <div>
                                                    <SfMultiSelect TValue="string[]" TItem="WorkWeek" Placeholder="Select week" Mode="@VisualMode.CheckBox" DataSource="@Weeks" PopupHeight="350px">
                                                        <MultiSelectEvents TItem="WorkWeek" TValue="string[]" ValueChange="@ValueChangeHandler"></MultiSelectEvents>
                                                        <MultiSelectFieldSettings Text="Week" Value="Week"></MultiSelectFieldSettings>
                                                    </SfMultiSelect>
                                                </div>
                                            }
                                            else if (context.Text == "Work Time Range")
                                            {
                                                <label class="labels">Duration unit:</label>
                                                <div>
                                                    <SfDropDownList TValue="string" TItem="Duration" Placeholder="@DurationUnitValue" @bind-Value="@DurationUnitValue" DataSource="@Duration1" PopupHeight="350px">
                                                        <DropDownListEvents TItem="Duration" TValue="string" ValueChange="@ValueChangeHandler2"></DropDownListEvents>
                                                        <DropDownListFieldSettings Text="Unit" Value="Unit"></DropDownListFieldSettings>
                                                    </SfDropDownList>
                                                </div>
                                            }
                                            else if (context.Text == "TimeLine Cell Unit")
                                            {
                                                <label class="labels">Timeline width:</label>
                                                <div>
                                                    <SfNumericTextBox TValue="int?" Format="n0" Value="@DefaultUnitWidth" Min="10">
                                                        <NumericTextBoxEvents TValue="int?" ValueChange="OnChange"></NumericTextBoxEvents>
                                                    </SfNumericTextBox>
                                                </div>
                                            }
                                            if (context.Text == "View Type")
                                            {
                                                <label class="labels">View type:</label>
                                                <div>
                                                    <SfDropDownList TValue="string" TItem="ViewTypes" Placeholder="@SelectedViewTypes" @bind-Value="@SelectedViewTypes" DataSource="@Types" PopupHeight="350px">
                                                        <DropDownListEvents TItem="ViewTypes" TValue="string" ValueChange="@GanttViewTypes"></DropDownListEvents>
                                                        <DropDownListFieldSettings Text="Type" Value="Type"></DropDownListFieldSettings>
                                                    </SfDropDownList>
                                                </div>
                                            }
                                            else if (context.Text == "View Mode")
                                            {
                                                <label class="labels">View mode:</label>
                                                <div>
                                                    <SfDropDownList TValue="string" TItem="SplitterView" DataSource="@SplitterViews" Placeholder="View" CssClass="e-custom">
                                                        <DropDownListFieldSettings Value="ID" Text="Text"></DropDownListFieldSettings>
                                                        <DropDownListEvents TValue="string" TItem="SplitterView" ValueChange="OnChange"></DropDownListEvents>
                                                    </SfDropDownList>
                                                </div>
                                            }
                                            if (context.Text == "Show grid Lines")
                                            {
                                                <div class="list-fields">
                                                    <label class="labels"> Show grid lines:</label>
                                                    <div>
                                                        <SfSwitch ValueChange="GridLines" TValue="bool?" TChecked="bool?"></SfSwitch>
                                                    </div>
                                                </div>
                                            }
                                            if (context.Text == "Event markers")
                                            {
                                                <div class="list-fields">
                                                    <label class="labels"> Show event marker:</label>
                                                    <div>
                                                        <SfSwitch ValueChange="EventMarkerEvent" TValue="bool?" TChecked="bool?"></SfSwitch>
                                                    </div>
                                                </div>
                                            }
                                            if (context.Text == "Show dependencies")
                                            {
                                                <div class="list-fields">
                                                    <label class="labels">Show dependencies:</label>
                                                    <div>
                                                        <SfSwitch ValueChange="ShowDependencies" TValue="bool?" @bind-Checked="ShowDependency" TChecked="bool"></SfSwitch>
                                                    </div>
                                                </div>
                                            }
                                            if (context.Text == "Show task labels")
                                            {
                                                <div class="list-fields">
                                                    <label class="labels">Show task labels:</label>
                                                    <div>
                                                        <SfSwitch ValueChange="ShowTaskLabels" TValue="bool?" @bind-Checked="IsTaskLabelsVisible" TChecked="bool"></SfSwitch>
                                                    </div>
                                                </div>
                                            }
                                            if (context.Text == "Enable critical path")
                                            {
                                                <div class="list-fields">
                                                    <label class="labels">Critical path:</label>
                                                    <div>
                                                        <SfSwitch ValueChange="CriticalPathEnable" TValue="bool?" TChecked="bool?"></SfSwitch>
                                                    </div>
                                                </div>
                                            }
                                            if (context.Text == "Custom scheduling")
                                            {
                                                <div class="list-fields">
                                                    <label class="labels">Custom scheduling:</label>
                                                    <div>
                                                        <SfSwitch ValueChange="EnableCustomScheduling" TValue="bool?" TChecked="bool?"></SfSwitch>
                                                    </div>
                                                </div>
                                            }
                                        }
                                    </Template>
                                </ListViewTemplates>
                            </SfListView>
                        </ChildContent>
                    </SfSidebar>
                }
        </div>
    </div>
</div>

@code {

    [CascadingParameter]
    protected MainLayout Layout { get; set; }

    protected override void OnInitialized()
    {
        // Updating the ListView datasource.
        UpdateDataModel();
        ProjectStartDate = new DateTime(2025, 01, 25);
        ProjectEndDate = new DateTime(2025, 11, 25);
        this.TaskCollection = OverviewData.DataCollection();
        this.ResourceCollection = OverviewData.GetResources;
        AssignmentCollection = OverviewData.GetAssignmentCollection();
        SegmentCollection = OverviewData.GetSegmentCollection();
        CurrentUri = Navigation.Uri;
        UpdateTheme(CurrentUri);
        ConvertImageToBase64(Navigation, JSRunTime);
        Layout.Collapse();
    }

}

<style>

    body:not(.material3):not(.material3-dark) .e-ddl.e-input-group.e-control-wrapper .e-ddl-icon::before {
        content: '\e729';
        padding-top: 5px;
    }

    .e-gantt-overview-sample {
        min-height: auto !important;
        height: 100vh;
    }

    .e-gantt-overview-sample-wrapper {
        height:100%;
    }
    .e-gantt-overview-sample-row{
        height: 100%;
    }
    .e-tbar-btn-text {
        display: none;
    }

    .highcontrast .e-toolbar .e-toolbar-item .e-tbar-btn.e-tbtn-txt .e-icons.e-btn-icon {
        padding: 4px !important;
    }

    .assignee-column{
        line-height: 17px;
    }

    .e-task-label {
        display: inline-block;
        width: 100%;
        padding: 0 6px;
    }

    .e-toolbar {
        border-bottom-left-radius: 0;
        border-bottom-right-radius: 0;
        border-style: solid;
        border-width: 1px 1px 0;
    }

    @@font-face {
        font-family: 'e-icons';
        src: url(data:application/x-font-ttf;charset=utf-8;base64,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) format('truetype');
        font-weight: normal;
        font-style: normal;
    }

    .e-close::before {
        font-family: 'e-icons' !important;
        content: '\e7e7';
        font-size: 15px;
    }

    .e-settings-icon::before {
        font-family: 'e-icons' !important;
        content: '\e880';
        font-size: 15px;
    }

    .listviewarrow::before {
        font-family: 'e-icons' !important;
        content: '\e70c';
        font-size: 15px;
    }

    .material3 .e-close::before,
    .materia3l-dark .e-close::before,
    .material3 .e-close::before {
        content: '\e7e7';
        font-family: 'e-icons';
        font-size: 15px;
    }

    .material .e-close::before,
    .material-dark .e-close::before,
    .material .e-close::before {
        content: '\e7fc';
        font-family: 'e-icons';
        font-size: 15px;
    }

    .fabric .e-close::before,
    .fabric-dark .e-close::before,
    .highcontrast .e-close::before {
        content: '\e7fc';
        font-family: 'e-icons';
        font-size: 15px;
    }

    .bootstrap .e-close::before,
    .bootstrap-dark .e-close::before {
        content: '\e7fc';
        font-family: 'e-icons';
        font-size: 15px;
    }

    .bootstrap4 .e-close::before {
        content: '\e745';
        font-family: 'e-icons';
        font-size: 15px;
    }

    .tailwind .e-close::before,
    .tailwind-dark .e-close::before {
        content: '\e7e7';
        font-family: 'e-icons';
        font-size: 15px;
    }

    .bootstrap5 .e-close::before,
    .bootstrap5-dark .e-close::before,
    .fluent .e-close::before, .fluent-dark .e-close::before,
    .tailwind .e-close::before, .tailwind-dark .e-close::before {
        content: '\e7e7';
        font-family: 'e-icons';
        font-size: 15px;
    }


    .material3 .e-settings-icon::before,
    .materia3l-dark .e-settings-icon::before,
    .material3 .e-settings-icon::before {
        content: '\e880';
        font-family: 'e-icons';
    }

    .material .e-settings-icon::before,
    .material-dark .e-settings-icon::before,
    .material .e-settings-icon::before {
        content: '\e679';
        font-family: 'e-icons';
    }

    .fabric .e-settings-icon::before,
    .fabric-dark .e-settings-icon::before,
    .highcontrast .e-settings-icon::before {
        content: '\e679';
        font-family: 'e-icons';
    }

    .bootstrap .e-settings-icon::before,
    .bootstrap-dark .e-settings-icon::before {
        content: '\e679';
        font-family: 'e-icons';
    }

    .bootstrap4 .e-settings-icon::before {
        content: '\e679';
        font-family: 'e-icons';
    }

    .tailwind .e-settings-icon::before,
    .tailwind-dark .e-settings-icon::before {
        content: '\e880';
        font-family: 'e-icons';
    }


    .fluent .e-settings-icon::before, .fluent-dark .e-settings-icon::before {
        content: '\e880';
        font-family: 'e-icons';
    }

    .title {
        line-height: 24px;
        font-size: @FilterHeaderFontSize;
        font-weight: @FilterHeaderFontWeight;
        margin-top: 0;
    }

    .e-filterbutton {
        padding-left: 20px;
        padding-right: 20px;
    }

    .e-listview .e-list-header {
        background: @FilterBackgroundColor;
        padding-left: 15px;
        position: sticky;
        top: -1px;
        height: @FilterHeaderHeight;
        color: @LabelTextColor;
    }

    .e-listview .e-list-group-item {
        font-size: 16px !important;
        color: @LabelTextColor;
        padding: 12px;
    }

    body.tailwind3 .e-listview .e-list-group-item,
    body.tailwind3-dark .e-listview .e-list-group-item {
        color: inherit !important;
    }

    .e-listview:not(.e-list-template) .e-list-item {
        height: 100% !important;
        padding: 12px;
    }

    .e-listview .e-list-group-item {
        height: 100% !important;
    }

    .e-btn .e-btn-icon.e-icon-left {
        margin-bottom: -3px;
    }

    .e-bigger .e-btn .e-btn-icon.e-icon-left {
        margin-top: -6px;
    }

    .e-listview .e-list-group-item:first-child {
        display: none;
    }


    .material3 .settings-btn,
    .material3-dark .settings-btn {
        font-family: Roboto;
        font-size: 14px;
        font-weight: 500;
        letter-spacing: 0.10000000149011612px;
        text-align: center;
        border-radius: 20px;
    }

    .material3 .list-header,
    .material3-dark .list-header {
        font-weight: 600;
        font-size: 14px;
        padding-top: 2px;
    }

    .material3 .list-fields,
    .material3 .list-fields {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .material3 .e-switch-wrapper,
    .material3-dark .e-switch-wrapper {
        width: 40px;
        height: 24px;
    }

    .labels {
        font-weight: 400;
        font-size: 14px;
    }

    .e-sidebar {
        overflow: hidden;
    }

        .e-sidebar.e-right.e-open {
            transition-duration: 200ms;
        }

        .e-sidebar.e-right.e-close {
            transition-duration: 200ms;
        }

    .e-listview .e-list-item.e-focused {
        background: none;
    }

    .bootstrap5 .e-listview .e-list-item.e-focused {
        color: #212529;
    }

    .highcontrast .e-listview .e-list-item.e-focused {
        color: #fff;
    }

    .bootstrap5 .e-listview .e-list-item,
    .bootstrap5-dark .e-listview .e-list-item {
        border: 0px;
    }

    .e-bigger.bootstrap5 .e-listview .e-list-item,
    .e-bigger .bootstrap5-dark .e-listview .e-list-item {
        border: 0px;
    }

    .e-bigger .material3 .e-switch-wrapper,
    .e-bigger .material3-dark .e-switch-wrapper {
        width: 52px;
        height: 32px;
    }

    .e-switch-wrapper {
        margin: 0 !important;
    }

    .list-fields {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .e-bigger
    .title {
        line-height: 24px;
        font-size: @FilterHeaderFontSizeTouch;
        font-weight: @FilterHeaderFontWeight;
        margin-top: 0;
    }

    .e-bigger .e-listview .e-list-header {
        background: @FilterBackgroundColor;
        padding-left: 15px;
        position: sticky;
        top: -1px;
        height: @FilterHeaderHeightTouch;
    }

    .groupedList.e-listview {
        display: block;
        max-width: 350px;
        margin: auto;
        border: 1px solid;
        line-height: initial;
        border-color: rgba(0, 0, 0, 0.12);
    }
    /* ListView border color customization */
    .highcontrast .groupedList.e-listview {
        border-color: #969696;
    }

    .tailwind-dark .groupedList.e-listview,
    .bootstrap5-dark .groupedList.e-listview,
    .material-dark .groupedList.e-listview,
    .bootstrap-dark .groupedList.e-listview,
    .fabric-dark .groupedList.e-listview {
        border-color: #fff;
    }

    /* ListView template customization */
    .groupedList.e-listview .e-list-header {
        color: #fff;
        height: 57px;
        background-color: #56697f;
        padding-left: 15px;
        position: sticky;
        top: -1px;
        box-shadow: 0 1px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);
    }

    body.tailwind3 .groupedList.e-listview .e-list-header,
    body.tailwind3-dark .groupedList.e-listview .e-list-header {
        box-shadow: none;
    }

    .groupedList.e-listview .e-list-item {
        cursor: pointer;
    }

    .groupedList.e-listview .e-list-group-item {
        color: #837c7c;
        height: inherit;
    }

    body.tailwind3 .groupedList.e-listview .e-list-group-item,
    body.tailwind3-dark .groupedList.e-listview .e-list-group-item {
        color: inherit !important;
    }

    .bootstrap5\.3 .e-listview .e-list-item.e-focused {
        color: #212529;
    }

    body.fluent2-highcontrast .e-listview .e-list-item.e-focused,
    body.fluent2-highcontrast .e-listview .e-list-item.e-hover {
        color: #fff;
    }

    /* Dark theme related customization*/
    .bootstrap5-dark .groupedList.e-listview .icon,
    .bootstrap-dark .groupedList.e-listview .icon,
    .highcontrast .groupedList.e-listview .icon,
    .fabric-dark .groupedList.e-listview .icon,
    .bootstrap5-dark .groupedList.e-listview .e-focused .icon,
    .tailwind-dark .groupedList.e-listview .e-focused .icon,
    .tailwind-dark .groupedList.e-listview .icon,
    .highcontrast .groupedList.e-listview .e-focused .icon,
    .bootstrap5 .groupedList.e-listview .e-focused .icon {
        color: #fff;
    }

    .bootstrap4 .groupedList.e-listview .e-focused .icon {
        color: #212529;
    }
    /* Template icons related customization */
    .groupedList.e-listview .icon {
        background: transparent;
        color: #6c757d;
    }


    .highcontrast .groupedList.e-listview .e-list-header {
        color: #ffd939;
        background-color: #333333;
    }

    .material-dark .e-list-item .e-list-avatar.e-list-multi-line .e-list-item-header {
        color: #ffffff;
    }

    .material-dark .e-list-item .e-list-avatar.e-list-multi-line .e-list-content,
    .bootstrap-dark .e-list-item .e-list-avatar.e-list-multi-line .e-list-content {
        color: rgba(255,255,255,0.7);
    }

    .groupedList .e-list-item:has(:hover) {
        background-color: transparent !important;
    }

    .e-bigger .e-gantt .e-gantt-chart .e-gantt-manualparenttaskbar {
        margin-top: @MarginTop !important;
    }

    .e-gantt .e-gantt-chart .e-gantt-manualparenttaskbar {
        margin-top: @MarginTop !important;
    }

    .e-bigger .e-gantt .e-gantt-chart .e-gantt-manualparenttaskbar-left,
    .e-bigger .e-gantt .e-gantt-chart .e-gantt-manualparenttaskbar-right {
        width: @ManualTaskbarWidth !important;
    }

    .e-gantt .e-gantt-chart .e-gantt-manualparenttaskbar-left,
    .e-gantt .e-gantt-chart .e-gantt-manualparenttaskbar-right {
        width: @ManualTaskbarWidth !important;
    }

    .material3.e-bigger .e-switch-wrapper .e-switch-handle.e-switch-active,
    .material3-dark.e-bigger .e-switch-wrapper .e-switch-handle.e-switch-active,
    .tailwind3.e-bigger .e-switch-wrapper .e-switch-handle.e-switch-active,
    .tailwind3-dark.e-bigger .e-switch-wrapper .e-switch-handle.e-switch-active {
        margin-left: -20px;
        height: 16px;
        width: 16px;
    }

    .tailwind3.e-bigger .e-switch-wrapper,
    .tailwind3-dark.e-bigger .e-switch-wrapper {
        height: 22px;
        width: 46px;
    }

        .tailwind3.e-bigger .e-switch-wrapper .e-switch-handle,
        .tailwind3-dark.e-bigger .e-switch-wrapper .e-switch-handle {
            height: 18px;
            width: 18px;
        }

    .header-title {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 8px;
        width: 230px;
    }

    .statustemp.e-activecolor {
        background-color: #ccffcc;
        padding: 10px;
        border-radius: 4px;
        width: fit-content;
    }

    .statustxt.e-activecolor {
        color: #003300;
    }

    .statustemp.e-lowcolor {
        background-color: #86b7fe;
        padding: 10px;
        border-radius: 4px;
        width: fit-content;
    }

    .statustxt.e-lowcolor {
        color: #00008B;
    }

    .statustemp.e-inactivecolor {
        background-color: #ffd7cc;
        padding: 10px;
        border-radius: 4px;
        width: fit-content;
    }

    .statustxt.e-inactivecolor {
        color: #8B0000;
    }

    .e-listview .e-list-container {
        overflow-y: auto;
        max-height: calc(100vh - 99px);
        padding-right: 10px;
    }

    .image {
        width: 100%;
        height: 28px;
    }

    .e-right-label-inner-div {
        margin-top: 4px;
    }

    .e-bigger .image {
        width: 100%;
        height: 32px;
    }

    .progress-label {
        line-height: 26px;
    }

    .e-bigger .progress-label {
        line-height: 30px;
    }
</style>
