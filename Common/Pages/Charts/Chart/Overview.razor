@page "/chart/overview"

@using Syncfusion.Blazor.Charts
@using Syncfusion.Blazor
@using Syncfusion.Blazor.Layouts
@using ThemeHelper

@inject NavigationManager NavigationManager
@inherits SampleBaseComponent;

<SampleDescription>
<p>This sample shows an overview of <a target='_blank' href='https://www.syncfusion.com/blazor-components/blazor-charts'>Blazor Charts</a> for data about the annual, monthly and product wise sales with different types of charts.</p>
</SampleDescription>
<ActionDescription>
    <p>The Blazor Chart is a graphical representation for data, and it includes configuration options for controlling how the data is presented and manipulated. In this example, you can see how to render and configure the line, column and pie chart with different feature such as highlight, legend, tooltip and annotation.  It can read data from data sources such as IEnumerable, OData web services, or SfDataManager Component and assign data fields to chart series.</p>
    <p>More information on the Blazor Chart types can be found in this <a target='_blank' href='https://blazor.syncfusion.com/documentation/chart/getting-started'>documentation</a> section.</p>
</ActionDescription>

<style>
    .e-dashboardlayout {
        padding: 20px;
        z-index: 0;
    }

    .e-panel {
        cursor: auto !important;
    }

    .chart-annotation {
        font-weight: bold;
        font-size: 11px;
        position:relative;
        border-radius: 3px;
        background-color: rgb(36, 133, 250, 0.4);
        padding: 5px;
        color: @annotationFontColor;
    }

    .chart-annotation::after {
        content: '';
        position: absolute;
        left: 0;
        right: 0;
        top: 100%;
        margin: 0 auto;
        width: 0;
        height: 0;
        border-top: 10px solid rgb(36, 133, 250, 0.4);
        border-left: 6px solid transparent;
        border-right: 6px solid transparent;
        z-index : 1
    }

    .title {
		font-size: 13px;
		font-weight: 500;
	}
</style>

<div class="control-section">
    <SfDashboardLayout CellSpacing="@(new double[]{15 ,15 })" CellAspectRatio="0.8" Columns="4">
        <DashboardLayoutPanels>
            <DashboardLayoutEvents Created="LayoutCreated"></DashboardLayoutEvents>
            <DashboardLayoutPanel SizeX="2">
                <HeaderTemplate>
					<span class="title">Online vs Retail Sales</span>
				</HeaderTemplate>
                <ContentTemplate>
                    @if (isLayoutRender)
                    {
                        <SfChart Theme="@theme" HighlightMode="HighlightMode.Cluster" HighlightPattern="SelectionPattern.DiagonalForward">
                            <ChartArea>
                                <ChartAreaBorder Width="0"></ChartAreaBorder>
                            </ChartArea>
                            <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category">
                                <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
                                <ChartAxisLabelStyle Size="11px"></ChartAxisLabelStyle>
                            </ChartPrimaryXAxis>
                            <ChartPrimaryYAxis Minimum="0" Maximum="100" Interval="20" LabelFormat="{value}%">
                                <ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
                                <ChartAxisLineStyle Width="0"></ChartAxisLineStyle>
                                <ChartAxisLabelStyle Size="11px"></ChartAxisLabelStyle>
                                <ChartAxisTitleStyle Size="13px"></ChartAxisTitleStyle>
                            </ChartPrimaryYAxis>
                            <ChartLegendSettings Position="@LegendPosition.Top"></ChartLegendSettings>
                            <ChartSeriesCollection>
                                <ChartSeries DataSource="@ColumnChartDataCollection" Name="Online" Fill="#2485FA" XName="Period" YName="Percentage" Type="ChartSeriesType.Column">
                                    <ChartMarker>
                                        <ChartDataLabel Visible="true" Position="LabelPosition.Outer" Name="TextMapping">
                                            <ChartDataLabelFont Size="11px" FontWeight="600"></ChartDataLabelFont>
                                        </ChartDataLabel>
                                    </ChartMarker>
                                </ChartSeries>
                                <ChartSeries DataSource="@ColumnChartData" Fill="#FEC200" Name="Retail" XName="Period" YName="Percentage" Type="ChartSeriesType.Column">
                                    <ChartMarker>
                                        <ChartDataLabel Visible="true" Position="LabelPosition.Outer" Name="TextMapping">
                                            <ChartDataLabelFont Size="11px" FontWeight="600"></ChartDataLabelFont>
                                        </ChartDataLabel>
                                    </ChartMarker>
                                </ChartSeries>
                            </ChartSeriesCollection>
                        </SfChart>
                    }
                </ContentTemplate>
            </DashboardLayoutPanel>
            <DashboardLayoutPanel Column="2" SizeX="2">
                <HeaderTemplate>
					<span class="title">Product Wise Sales - 2021</span>
				</HeaderTemplate>
                <ContentTemplate>
                        @if (isLayoutRender)
                        {
                            <SfAccumulationChart EnableAnimation="true" Theme="@theme">
                                <AccumulationChartBorder Color="transparent"></AccumulationChartBorder>
                                <AccumulationChartTooltipSettings Enable="true" Format="${point.x}"></AccumulationChartTooltipSettings>
                                <AccumulationChartSeriesCollection>
                                    <AccumulationChartSeries DataSource="@PieChartDataCollection" XName="Product" YName="Percentage" Radius="80%" InnerRadius="40%" ExplodeOffset="10%" ExplodeIndex="4" Explode="true" Palettes="@palettes">
                                        <AccumulationDataLabelSettings Visible="true" Name="TextMapping" Position="AccumulationLabelPosition.Outside">
                                            <AccumulationChartConnector Length="8px"></AccumulationChartConnector>
                                        </AccumulationDataLabelSettings>
                                    </AccumulationChartSeries>
                                </AccumulationChartSeriesCollection>
                                <AccumulationChartLegendSettings Width="130px">
                                    <AccumulationChartLegendFont Size="12px"></AccumulationChartLegendFont>
                                </AccumulationChartLegendSettings>
                                <AccumulationChartEvents OnLegendItemRender="OnLegendRender"></AccumulationChartEvents>
                            </SfAccumulationChart>
                        }
                </ContentTemplate>
            </DashboardLayoutPanel>
            <DashboardLayoutPanel Row="1" SizeX="4">
                <HeaderTemplate>
					<span class="title" style="margin-left:40%">Monthly Sales for 2021</span>
				</HeaderTemplate>
                <ContentTemplate>
                    @if (isLayoutRender)
                    {
                        <SfChart Theme="@theme">
                            <ChartArea>
                                <ChartAreaBorder Width="0"></ChartAreaBorder>
                            </ChartArea>
                            <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category" EdgeLabelPlacement="EdgeLabelPlacement.Shift">
                                <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
                                <ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
                                <ChartAxisLabelStyle Size="12px"></ChartAxisLabelStyle>
                            </ChartPrimaryXAxis>
                            <ChartPrimaryYAxis LabelFormat="${value}" Minimum="0" Maximum="10000" Interval="2000">
                                <ChartAxisLineStyle Width="0"></ChartAxisLineStyle>
                                <ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
                                <ChartAxisLabelStyle Size="12px"></ChartAxisLabelStyle>
                                <ChartAxisTitleStyle Size="13px"></ChartAxisTitleStyle>
                            </ChartPrimaryYAxis>
                            <ChartTooltipSettings Enable="true" Header="" Shared="true" Format="${point.x} : <b> ${point.y} </b>"></ChartTooltipSettings>
                            <ChartSeriesCollection>
                                <ChartSeries DataSource="@ChartDataCollection" Fill="#2485FA" XName="Period" Width="2.5" YName="Percentage" Type="ChartSeriesType.Line">
                                    <ChartMarker Visible="true" Width="5" Height="5" Fill="#2485FA">
                                    </ChartMarker>
                                </ChartSeries>
                            </ChartSeriesCollection>
                            <ChartAnnotations>
                                <ChartAnnotation CoordinateUnits="Units.Point" X="@AnnotationData[0].AnnotationX" Y="@AnnotationData[0].AnnotationY">
                                    <ContentTemplate>
                                        <div class="chart-annotation">Spring Break</div>
                                    </ContentTemplate>
                                </ChartAnnotation>
                                <ChartAnnotation CoordinateUnits="Units.Point" X="@AnnotationData[1].AnnotationX" Y="@AnnotationData[1].AnnotationY">
                                    <ContentTemplate>
                                        <div class="chart-annotation">Summer Holiday</div>
                                    </ContentTemplate>
                                </ChartAnnotation>
                                <ChartAnnotation CoordinateUnits="Units.Point" X="@AnnotationData[2].AnnotationX" Y="@AnnotationData[2].AnnotationY">
                                    <ContentTemplate>
                                        <div class="chart-annotation">Christmas <span style="margin-left:27%">Sale</span></div>
                                    </ContentTemplate>
                                </ChartAnnotation>
                            </ChartAnnotations>
                        </SfChart>
                    }
                </ContentTemplate>
            </DashboardLayoutPanel>
        </DashboardLayoutPanels>
    </SfDashboardLayout>
</div>
<style>
  
   
    ellipse[id*=_Trackball_1] {
      
        stroke-width: 1 !important;
        stroke: white !important;
    }
</style>
@code {

    private bool isLayoutRender;
    private Theme theme;
    private string[] palettes = new string[] { "#61EFCD", "#CDDE1F", "#FEC200", "#CA765A", "#2485FA", "#F57D7D", "#C152D2",
    "#8854D9", "#3D4EB8", "#00BCD7","#4472c4", "#ed7d31", "#ffc000", "#70ad47", "#5b9bd5", "#c1c1c1", "#6f6fe2", "#e269ae", "#9e480e", "#997300" };
    private string annotationFontColor;
    public List<ChartData> ChartDataCollection { get; set; } = new List<ChartData>
    {
        new ChartData { Period = "Jan", Percentage = 3800 },
        new ChartData { Period = "Feb", Percentage = 5200 },
        new ChartData { Period = "Mar", Percentage = 850 },
        new ChartData { Period = "Apr", Percentage = 5120},
        new ChartData { Period = "May", Percentage = 3500 },
        new ChartData { Period = "Jun", Percentage = 2220 },
        new ChartData { Period = "Jul", Percentage = 6500 },
        new ChartData { Period = "Aug", Percentage = 3250 },
        new ChartData { Period = "Sep", Percentage = 1250 },
        new ChartData { Period = "Oct", Percentage = 4000 },
        new ChartData { Period = "Nov", Percentage = 2300 },
        new ChartData { Period = "Dec", Percentage = 6800 }
    };
    public List<ChartData> PieChartDataCollection { get; set; } = new List<ChartData>
    {
        new ChartData { Product = "EarPods : 5%", Percentage = 5, TextMapping = "EarPods"},
        new ChartData { Product = "TV : 11%", Percentage = 11, TextMapping = "TV"},
        new ChartData { Product = "iPad : 9%", Percentage = 9, TextMapping = "iPad"},
        new ChartData { Product = "PC : 7%", Percentage = 7, TextMapping = "PC"},
        new ChartData { Product = "Laptop : 15%",  Percentage = 15 , TextMapping = "Laptop"},
        new ChartData { Product = "Mobile : 35%", Percentage = 35, TextMapping = "Mobile"},
        new ChartData { Product = "Camera : 10%", Percentage = 10, TextMapping = "Camera"},
        new ChartData { Product = "Others : 7%", Percentage = 7, TextMapping = "Others"}
    };
    public List<ChartData> ColumnChartDataCollection { get; set; } = new List<ChartData>
    {
        new ChartData { Period = "2017", Percentage = 60, TextMapping = "60%" },
        new ChartData { Period = "2018", Percentage = 51, TextMapping = "51%"},
        new ChartData { Period = "2019", Percentage = 71, TextMapping = "71%" },
        new ChartData { Period = "2020", Percentage = 85, TextMapping = "85%" },
        new ChartData { Period = "2021", Percentage = 73, TextMapping = "73%" },
    };
    public List<ChartData> ColumnChartData { get; set; } = new List<ChartData>
    {
        new ChartData { Period = "2017", Percentage = 40, TextMapping = "40%" },
        new ChartData { Period = "2018", Percentage = 39, TextMapping = "39%"},
        new ChartData { Period = "2019", Percentage = 29, TextMapping = "29%" },
        new ChartData { Period = "2020", Percentage = 15, TextMapping = "15%" },
        new ChartData { Period = "2021", Percentage = 27, TextMapping = "27%" },
    };
    public List<ChartData> AnnotationData { get; set; } = new List<ChartData>
    {
        new ChartData { AnnotationX = "Apr", AnnotationY = "6700" },
        new ChartData { AnnotationX = "Jul", AnnotationY = "8100" },
        new ChartData { AnnotationX = "Dec", AnnotationY = "8800" }
    };

    protected override void OnInitialized()
    {
        theme = ThemeHelper.GetCurrentTheme(NavigationManager.Uri);
        annotationFontColor = NavigationManager.Uri.Contains("dark") || theme == Theme.HighContrast ? "#E9ECEF" : "#343A40";
    }

    public void LayoutCreated()
    {
        isLayoutRender = true;
    }

    public void OnLegendRender(AccumulationLegendRenderEventArgs args)
    {
        string[] textCollection = args.Text.Split(":");
        string space = "", product = ((textCollection[0] == "Laptop " || textCollection[0] == "Mobile " || textCollection[0] == "Camera ") ? textCollection[0] : textCollection[0].Trim());
        int textCount = product.Length,
        condition = textCount == 2 ? 8 : 9;
        if (textCollection[0].Equals("Camera "))
        {
            space = "\u00A0\u00A0\u00A0";
        }
        else
        {
            for (int i = textCount; i < condition; i++)
            {
                space += "\u00A0\u00A0";
            }
        }

        args.Text = product + space + (textCollection[1].Trim());
    }

    public class ChartData
    {
        public string Period { get; set; }
        public string Product { get; set; }
        public double Percentage { get; set; }
        public string TextMapping { get; set; }
        public string AnnotationX { get; set; }
        public string AnnotationY { get; set; }
    }
}
