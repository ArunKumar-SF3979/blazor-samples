@page "/chart/inversed-spline"

@using Syncfusion.Blazor.Charts
@using Syncfusion.Blazor
@using ThemeHelper

@inject NavigationManager NavigationManager
@inherits SampleBaseComponent;

<SampleDescription>
    <p>This sample shows the 2012 climate report in London and France with the spline series by inversing X and Y Axis. Data points are enhanced by a marker and tooltip.</p>
</SampleDescription>
<ActionDescription>
    <p>In this example, you can see how to render and configure the spline type charts. Spline chart connects each point in series through a curved line. <code>Marker</code> is used to represent individual data and its value.</p>
    <p><code>Tooltip</code> is enabled in this example. To see the tooltip in action, hover a point or tap on a point in touch enabled devices.</p>
</ActionDescription>

<div class="control-section" align='center'>
    <SfChart Title="Music Album Sale" IsTransposed="true" Width="@Width" Theme="@Theme">
        <ChartArea><ChartAreaBorder Width="1"></ChartAreaBorder></ChartArea>
        <ChartPrimaryXAxis Title="Years" Minimum="2000" Maximum="2016" ValueType="Syncfusion.Blazor.Charts.ValueType.Double" Interval="4" EdgeLabelPlacement="EdgeLabelPlacement.Shift">
            <ChartAxisMinorTickLines Width="0"></ChartAxisMinorTickLines>
        </ChartPrimaryXAxis>
        <ChartPrimaryYAxis Title="Sales (In Millions)" Minimum="0" Maximum="25" Interval="5" LabelFormat="{value}M">
        </ChartPrimaryYAxis>
        <ChartTooltipSettings Header="<b>Album Sale</b>" Enable="true" Shared="true" Format="${point.x}: <b>${point.y}</b>"></ChartTooltipSettings>
        <ChartSeriesCollection>
            <ChartSeries DataSource="@ChartPoints" XName="Month" Width="2"
                         Opacity="1" YName="FR_Temperature" Type="ChartSeriesType.Spline">
                <ChartMarker Visible="true" Width="7" Height="7" IsFilled="true">
                </ChartMarker>
            </ChartSeries>
        </ChartSeriesCollection>
    </SfChart>
</div>

@code{

    private Theme Theme { get; set; }
    public string Width { get; set; } = "90%";
    public List<InversedLineChartData> ChartPoints { get; set; } = new List<InversedLineChartData>
    {
        new InversedLineChartData { Month = 2000, LDN_Temperature = -1, FR_Temperature = 10 },
        new InversedLineChartData { Month = 2002, LDN_Temperature = -1, FR_Temperature = 7 },
        new InversedLineChartData { Month = 2004, LDN_Temperature = 25, FR_Temperature = 13 },
        new InversedLineChartData { Month = 2005, LDN_Temperature = 31, FR_Temperature = 16 },
        new InversedLineChartData { Month = 2007, LDN_Temperature = 14, FR_Temperature = 11 },
        new InversedLineChartData { Month = 2010, LDN_Temperature = 8, FR_Temperature = 10 },
        new InversedLineChartData { Month = 2011, LDN_Temperature = 8, FR_Temperature = 15 },
        new InversedLineChartData { Month = 2013, LDN_Temperature = 8, FR_Temperature = 20 },
        new InversedLineChartData { Month = 2014, LDN_Temperature = 8, FR_Temperature = 17 },
        new InversedLineChartData { Month = 2015, LDN_Temperature = 8, FR_Temperature = 5 }
    };

    protected override void OnInitialized()
    {
        Theme = ThemeHelper.GetCurrentTheme(NavigationManager.Uri);
    }

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
        if(firstRender) {
            if (SampleService.IsDevice)
            {
                 Width = "100%";
                 StateHasChanged();
            }
        }
    }

    public class InversedLineChartData
    {
        public double Month { get; set; }
        public double LDN_Temperature { get; set; }
        public double FR_Temperature { get; set; }
    }
	
}
