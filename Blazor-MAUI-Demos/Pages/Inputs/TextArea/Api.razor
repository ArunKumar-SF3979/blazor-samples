@page "/TextArea/Api"

@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.DropDowns

@*Hidden:Lines*@
@inherits SampleBaseComponent
@inject NavigationManager NavigationManager


@*End:Hidden*@

<div class="col-lg-12">
    <div class="col-lg-8 control-section sb-property-border">
        <div class="control-wrapper">
            <SfTextArea Placeholder="Enter your comments" ResizeMode=Syncfusion.Blazor.Inputs.Resize.None FloatLabelType="FloatLabelType.Auto" ShowClearButton="@Clear" RowCount="@Row"
                        ValueChange="@TextAreaValueChange" ColumnCount="@Column" MaxLength="@MaxLength" Enabled="@CheckDisabled" Readonly="@CheckReadonly" @bind-Value="@TextAreaValue"></SfTextArea>
        </div>
    </div>
    <div class="col-lg-4">
        <div class='property-panel-section'>
            <div class="property-panel-header">Properties</div>
            <div class="property-panel-content">
                <label class="example-label">Row</label>
                <SfNumericTextBox TValue="int" Value="@RowValue" Min="1">
                    <NumericTextBoxEvents TValue="int" ValueChange="@ValueChangeHandler2"></NumericTextBoxEvents>
                </SfNumericTextBox>
            </div>
            <div class="property-panel-content">
                <label class="example-label">Column</label>
                <SfNumericTextBox TValue="int" Value="@ColumnValue" Min="1">
                    <NumericTextBoxEvents TValue="int" ValueChange="@ValueChangeHandler3"></NumericTextBoxEvents>
                </SfNumericTextBox>
            </div>
            <div class="property-panel-content">
                <SfCheckBox Label="Disabled" ValueChange="OnEnabledChange" TChecked="bool"></SfCheckBox>
            </div>
            <div class="property-panel-content">
                <SfCheckBox Label="Read only" ValueChange="OnReadonlyChange" TChecked="bool"></SfCheckBox>
            </div>
            <div class="property-panel-content">
                <label class="example-label">Value</label>
                <SfTextBox @bind-Value="@TextboxValue" ValueChange="OnValueChange"></SfTextBox>
            </div>
            <div class="property-panel-content">
                <label class="example-label">Max Length</label>
                <SfNumericTextBox TValue="int" Value="@MaxLengthValue" Min="-1">
                    <NumericTextBoxEvents TValue="int" ValueChange="@ValueChangeHandler"></NumericTextBoxEvents>
                </SfNumericTextBox>
            </div>
            <div class="property-panel-content">
                <SfCheckBox Label="Show Clear Button" ValueChange="OnClearChange" TChecked="bool"></SfCheckBox>
            </div>
        </div>
    </div>
</div>

@code {

    private bool CheckDisabled { get; set; } = true;
    private bool CheckReadonly { get; set; } = false;
    private string TextAreaValue { get; set; } = "";
    private string TextboxValue { get; set; } = string.Empty;



    public int MaxLength { get; set; } = -1;
    public int MaxLengthValue { get; set; } = -1;

    public int Row { get; set; } = 2;
    public int RowValue { get; set; } = 2;

    public int Column { get; set; } = 20;
    public int ColumnValue { get; set; } = 20;

    private bool Clear { get; set; } = false;

    public void OnEnabledChange(Syncfusion.Blazor.Buttons.ChangeEventArgs<bool> args)
    {
        this.CheckDisabled = !args.Checked;
    }

    public void OnClearChange(Syncfusion.Blazor.Buttons.ChangeEventArgs<bool> args)
    {
        this.Clear = args.Checked;
    }

    public void OnReadonlyChange(Syncfusion.Blazor.Buttons.ChangeEventArgs<bool> args)
    {
        this.CheckReadonly = args.Checked;
    }

    public void OnValueChange(Syncfusion.Blazor.Inputs.ChangedEventArgs args)
    {
        this.TextAreaValue = args.Value;
    }

    public void TextAreaValueChange(Syncfusion.Blazor.Inputs.TextAreaValueChangeEventArgs args)
    {
        this.TextboxValue = args.Value;
    }

    private void ValueChangeHandler(Syncfusion.Blazor.Inputs.ChangeEventArgs<int> args)
    {
        MaxLengthValue = (int)args.Value;
        StateHasChanged();
        this.MaxLength = args.Value;
    }

    private void ValueChangeHandler2(Syncfusion.Blazor.Inputs.ChangeEventArgs<int> args)
    {
        RowValue = (int)args.Value;
        StateHasChanged();
        this.Row = args.Value;
    }

    private void ValueChangeHandler3(Syncfusion.Blazor.Inputs.ChangeEventArgs<int> args)
    {
        ColumnValue = (int)args.Value;
        StateHasChanged();
        this.Column = args.Value;
    }
}

<style>
    .control-section {
        min-height: 370px;
    }

    .control-wrapper {
        max-width: 250px;
        margin: 0 auto;
        padding: 40px 0px 0px;
    }

    .example-label {
        font-size: 14px;
        margin-bottom: 6px;
    }

    .property-panel-content {
        padding: 0px 0px 20px 0px;
    }

        .property-panel-content:last-child {
            padding: 0px 0px 40px 0px;
        }
</style>