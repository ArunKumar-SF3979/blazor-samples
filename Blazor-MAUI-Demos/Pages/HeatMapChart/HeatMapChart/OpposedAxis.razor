@page "/heatmap-chart/opposed-axis"

@using Syncfusion.Blazor
@using Syncfusion.Blazor.HeatMap
@using SFHeatMap = Syncfusion.Blazor.HeatMap
@using Syncfusion.Blazor.Buttons;
@inject NavigationManager NavigationManager
@using sf_blazor_heatmapdata
@using MSComponents = Microsoft.AspNetCore.Components
@*Hidden:Lines*@
@inherits SampleBaseComponent
<PageTitle>Blazor HeatMap Chart Opposed Axis Example - Syncfusion Demos</PageTitle>
<HeadContent>
    <meta name="description" content="This example demonstrates the Opposed Axis in Blazor HeatMap Chart Component. Explore here for more details." />
    <link rel="canonical" href="@canonicalURL" />
</HeadContent>
@*End:Hidden*@

<SampleDescription>
    <p>This sample illustrates the monthly flight arrivals at JFK international airport, New York. The data label is disabled in this sample, and the Tooltip displays the data point values.</p>
</SampleDescription>
<ActionDescription>
   <p>In this example, you can see how to change the display position of the axis. You can change the display position of axes by enabling the <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.HeatMap.HeatMapXAxis.html#Syncfusion_Blazor_HeatMap_HeatMapXAxis_OpposedPosition'>OpposedPosition</a> property for each axis. </p>
   <p>The Tooltip is enabled in this example. To see the tooltip in action, hover a point or tap on a point in touch-enabled devices.</p>
</ActionDescription>

<div class="col-lg-9 control-section">
    <div class="row">
        <SfHeatMap DataSource="@DataSource" Theme="@Theme">
            <HeatMapTitleSettings Text="Monthly Flight Traffic at JFK Airport">
                <HeatMapTitleTextStyle Size="15px" FontWeight="500" FontStyle="Normal" TextOverflow="TextOverflow.Trim"></HeatMapTitleTextStyle>
            </HeatMapTitleSettings>
            <HeatMapXAxis Labels="@XLabels"
                          LabelRotation="45"
                          LabelIntersectAction="@SFHeatMap.LabelIntersectAction.None"
                          OpposedPosition="@XOpposedPosition">
                <HeatMapXAxisTextStyle Color="@AxisLabelColor" />
            </HeatMapXAxis>
            <HeatMapYAxis Labels="@YLabels" OpposedPosition="@YOpposedPosition">
                <HeatMapYAxisTextStyle Color="@AxisLabelColor" />
            </HeatMapYAxis>
            <HeatMapCellSettings ShowLabel="false" Format="{value} flights">
                <HeatMapCellBorder Width="0"></HeatMapCellBorder>
            </HeatMapCellSettings>
            <HeatMapLegendSettings Visible="false"></HeatMapLegendSettings>
        </SfHeatMap>
    </div>
</div>
<div class="col-lg-3 property-section">
    <div><h5>Properties</h5></div>
    <table id="property" title="Properties" style="width: 100%">
        <tbody>
            <tr style="height: 50px">
                <td style="width: 40%;">
                    <div>
                        <SfCheckBox Label="Change X-Axis Position" Checked="@XOpposedPosition" ValueChange="ValueXChange" TChecked="bool"></SfCheckBox>
                    </div>
                </td>
            </tr>
            <tr style="height: 50px">
                <td style="width: 40%;">
                    <div>
                        <SfCheckBox Label="Change Y-Axis Position" Checked="@YOpposedPosition" ValueChange="ValueYChange" TChecked="bool"></SfCheckBox>
                    </div>
                </td>
            </tr>
        </tbody>
    </table>
</div>

@code{
    //Hidden:Lines
    private string canonicalURL { get; set; }
    //End:Hidden
    public bool YOpposedPosition = true;
    public bool XOpposedPosition = true;
    public Theme Theme { get; set; }
    public string AxisLabelColor = "Black";
    string[] XLabels = new string[] { "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017" };
    string[] YLabels = new string[] { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "July", "Aug", "Sept", "Oct", "Nov", "Dec" };
    int[,] DataSource = HeatMapData.GetOpposedData();
    public void ValueXChange(Syncfusion.Blazor.Buttons.ChangeEventArgs<bool> args)
    {
        XOpposedPosition = args.Checked;
    }
    public void ValueYChange(Syncfusion.Blazor.Buttons.ChangeEventArgs<bool> args)
    {
        YOpposedPosition = args.Checked;
    }
    protected override void OnInitialized()
    {
        //Hidden:Lines
        canonicalURL = NavigationManager.Uri.Split("?")[0];
        //End:Hidden
        Theme = HeatmapThemeHelper.GetCurrentHeatmapTheme(NavigationManager.Uri);
        if (Theme.ToString().IndexOf("Dark") > -1 || Theme.ToString().IndexOf("HighContrast") > -1)
        {
            AxisLabelColor = "White";
        }
        else
        {
            AxisLabelColor = "Black";
        }
    }
}

<style>
    .col-lg-3.property-section {
        padding-top: 60px;
    }    
</style>