<!DOCTYPE html>
<html lang="en">

<head>
    <!-- Google Tag Manager -->
    <script>
        (function (w, d, s, l, i) {
            w[l] = w[l] || []; w[l].push({
                'gtm.start':
                    new Date().getTime(), event: 'gtm.js'
            }); var f = d.getElementsByTagName(s)[0],
                j = d.createElement(s), dl = l != 'dataLayer' ? '&l=' + l : ''; j.async = true; j.src =
                    'https://www.googletagmanager.com/gtm.js?id=' + i + dl; f.parentNode.insertBefore(j, f);
        })(window, document, 'script', 'dataLayer', 'GTM-W8WD8WN');
    </script>
    <!-- End Google Tag Manager -->
     <style>
        #components-reconnect-modal {
            display: none !important;
        }
    </style>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
    <base href="/" />
    <link id="theme" href="_content/Syncfusion.Blazor.Themes/fluent.css" rel="stylesheet" />
    <SampleMetaData @rendermode="@RenderMode.InteractiveAuto" />
</head>

<body>
    <div hidden id="sync-analytics" data-queue="EJ2 - Blazor - Demos"></div>
    <!-- Google Tag Manager (noscript) -->
    <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
    <!-- End Google Tag Manager (noscript) -->
    <Routes @rendermode="@(new InteractiveAutoRenderMode(false))" />
    <script src="_framework/blazor.web.js"></script>
    <script type="module" src="import_net8_resources.js"></script>
    <script src="_content/Syncfusion.Blazor.Core/scripts/syncfusion-blazor.min.js" type="text/javascript"></script>
    <div class="dynamic-resources"></div>
    <script>
        window.cultureInfo = {
            get: () => window.localStorage['BlazorCulture'],
            set: (value) => window.localStorage['BlazorCulture'] = value
        };
         const consoleMessages = [];
        let disconnectedFound = false;
        const originalConsoleError = console.error;

        console.error = function () {
            originalConsoleError.apply(console, arguments);
            // Capture the error message and push it to the array
            const message = Array.from(arguments).join(" ");
            consoleMessages.push({ type: "error", message });
        };

        window.addEventListener('click',function(){
            for (const messageObject of consoleMessages) {
                if (messageObject.message.includes("Connection disconnected")) {
                    disconnectedFound = true;
                    break; // Stop the loop when "disconnected" is found in a message
                }
            }
            if(disconnectedFound) {
                window.location.reload();
            }
        });
    </script>
</body>

</html>
