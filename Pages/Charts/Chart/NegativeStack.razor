@page "/chart/negative-stack"
@using Syncfusion.Blazor.Charts
@using ThemeHelper
@inject NavigationManager NavigationManager
@inherits SampleBaseComponent;
<SampleDescription>
    <p>This sample illustrates stacked bar with negative data points. Data points values are shown by using data label.</p>
</SampleDescription>
<ActionDescription>
   <p>In this example, you can see how to render and configure the negative values in stacked bar type chart. The stacking bar type chart stacks points in the series horizontally and you can also use the <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Charts.ChartSeries.html#Syncfusion_Blazor_Charts_ChartSeries_StackingGroup'>StackingGroup</a> property to group stacking collections based on categories.</p>
   <p><code>Tooltip</code> is enabled in this example. To see the tooltip in action, hover a point or tap on a point in touch enabled devices.</p>
   <p>More information about the stacked bar series can be found in this <a target='_blank' href='https://blazor.syncfusion.com/documentation/chart/chart-types/stacked-bar'>documentation section</a>.</p>
</ActionDescription>

<div class="control-section">
    <SfChart Title="Height vs Weight" Theme="@Theme">
        <ChartEvents TooltipRender="TooltipRender"></ChartEvents>
        <ChartArea><ChartAreaBorder Width="0"></ChartAreaBorder></ChartArea>
        <ChartPrimaryXAxis Title="Height in Inches" ValueType="Syncfusion.Blazor.Charts.ValueType.Category" Interval="1">
            <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
        </ChartPrimaryXAxis>
        <ChartPrimaryYAxis LabelFormat="{value} KG">
            <ChartAxisLineStyle Width="0"></ChartAxisLineStyle>
            <ChartAxisLabelStyle Color="transparent"></ChartAxisLabelStyle>
            <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
            <ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
        </ChartPrimaryYAxis>
        <ChartSeriesCollection>
            <ChartSeries DataSource="@ChartPoints" XName="Height" YName="Female" Name="Female" Type="ChartSeriesType.StackingBar">
                <ChartMarker>
                    <ChartDataLabel Visible="true" Position="LabelPosition.Top">
                        <ChartDataLabelFont FontWeight="600"></ChartDataLabelFont>
                        </ChartDataLabel>
                </ChartMarker>
            </ChartSeries>
            <ChartSeries DataSource="@ChartPoints" XName="Height" YName="Male" Name="Male" Type="ChartSeriesType.StackingBar">
                <ChartMarker>
                    <ChartDataLabel Visible="true" Name="Text" Position="LabelPosition.Top">
                        <ChartDataLabelFont FontWeight="600"></ChartDataLabelFont>
                    </ChartDataLabel>
                </ChartMarker>
            </ChartSeries>
        </ChartSeriesCollection>
        <ChartLegendSettings Position="LegendPosition.Right"></ChartLegendSettings>
        <ChartTooltipSettings Enable="true"></ChartTooltipSettings>
    </SfChart>
</div>

@code{

    public class StackedBarChartData
    {
        public string Height { get; set; }
        public double Female { get; set; }
        public double Male { get; set; }
        public string Text {  get;  set; }
    }

    public List<StackedBarChartData> ChartPoints { get; set; } = new List<StackedBarChartData>
    {
        new StackedBarChartData { Height = "4.5", Female = 31, Male = -31, Text = "31 KG" },
        new StackedBarChartData { Height = "4.8", Female = 37, Male = -39, Text = "39 KG" },
        new StackedBarChartData { Height = "5.1", Female = 49, Male = -52, Text = "52 KG" },
        new StackedBarChartData { Height = "5.4", Female = 57, Male = -64, Text = "64 KG" },
        new StackedBarChartData { Height = "5.7", Female = 63, Male = -70, Text = "70 KG" },
        new StackedBarChartData { Height = "6", Female = 69, Male = -74, Text = "74 KG" }
    };

    private Syncfusion.Blazor.Theme Theme { get; set; }
    protected override void OnInitialized()
    {
        Theme = ThemeHelper.GetCurrentTheme(NavigationManager.Uri);
    }
    private void TooltipRender(TooltipRenderEventArgs args) 
    {
       args.Text = args.Text.IndexOf("-") > 0 ? args.Text.Replace("-", "") : args.Text;
    }
}
